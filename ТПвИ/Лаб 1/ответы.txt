5. csproj - Файл проекта C#, который содержит список файлов, включенных в проект, а также ссылки на системные сборки
7. Debug: Включена отладочная информация, Дополнительные проверки
Release: Включены оптимизации компилятора, Отладочная информация удаляется
10. launchSettings.json - как запустить проект
11. appsettings.json  - конфигурация в режиме выполнения;
17. Фреймворк - это программная платформа, которая предоставляет готовые инструменты, библиотеки и архитектурные решения для разработки приложений.
18. Фреймворк ОС - набор библиотек (функций) и порядок работы с ними, которые являются посредниками между разрабатываемым ПО и ядром ОС.
19. Программная платформа – это набор библиотек, документации и инструментов для разработки приложений
20. .Net Framework – платформа, которая создана Microsoft для разработки приложений
21. ASP.NET CORE: программная платформа для разработки web-приложений.
22. Кроссплатформенный - работает на нескольких операционных системах (Windows, MacOS, Linux)
23. NuGet – программный менеджер для установки компонентов приложения, оформленных в виде пакетов
24. Утилита dotnet — это командная строка для управления .NET-приложениями. Она позволяет компилировать, запускать, публиковать, тестировать код и управлять зависимостями в проектах .NET.
25. Core CLR – библиотека, загружает сборку (метаданные + IL код) и с помощью JIT-компилятора компилирует IL в машинный (нативный) код и сразу исполняет его (это происходит на этапе исполнения программы).
26. Core FX — это базовая библиотека .NET Core, включающая в себя основные API для работы с файлами, сетью, коллекциями, строками и многими другими стандартными функциями
27. Встроенный в ASP.NET CORE http-сервер - Kestrel – кроссплатформенный HTTP-сервер, принимает низкоуровневый запрос, и на его основе создаёт объект HttpContext, содержащий всю информацию о запросе (в т.ч. Request и Response).
Альтернатива  Kestrel: IIS HTTP Server (только под Windows) и HTTP.sys (только под Windows).        
28. ASP.NET CORE: этапы подготовки и запуска приложения:
- generate – создание приложения на основе шаблона;
- restore – восстановление пакеты и зависимости;
- build – компиляция и генерация ресурсов;
- run   - запуск скомпилированного приложения.
29. .Net 8.0

1)Объяснить код
2) из чего состоит проект
3)ответы на вопросы
4) что такое интернет
5) запрос и ответ
6) клиент-сервер

