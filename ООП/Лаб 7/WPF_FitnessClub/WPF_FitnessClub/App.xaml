<Application x:Class="WPF_FitnessClub.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Windows/Registration.xaml"
             xmlns:local="clr-namespace:WPF_FitnessClub">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Dictionary_en.xaml"/>
                <ResourceDictionary Source="Resources/Dictionary_ru.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Общие цвета, одинаковые для всех тем -->
            <Color x:Key="PrimaryRed">#FF3333</Color>
            <Color x:Key="DarkRed">#CC0000</Color>
            <Color x:Key="LightRed">#FFA0A0</Color>
            
            <!-- Цвета для светлой темы (по умолчанию) -->
            <Color x:Key="BackgroundColor">White</Color>
            <Color x:Key="WindowBackgroundColor">White</Color>
            <Color x:Key="TextColor">#333333</Color>
            <Color x:Key="LightGray">#F5F5F5</Color>
            <Color x:Key="MediumGray">#808080</Color>
            <Color x:Key="DarkGray">#333333</Color>
            <Color x:Key="SecondaryBackgroundColor">#F5F5F5</Color>

            <!-- Кисти -->
            <SolidColorBrush x:Key="PrimaryRedBrush" Color="{StaticResource PrimaryRed}"/>
            <SolidColorBrush x:Key="DarkRedBrush" Color="{StaticResource DarkRed}"/>
            <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGray}"/>
            <SolidColorBrush x:Key="MediumGrayBrush" Color="{StaticResource MediumGray}"/>
            <SolidColorBrush x:Key="DarkGrayBrush" Color="{StaticResource DarkGray}"/>

            <!-- Кисти для фона и текста -->
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
            <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
            <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackgroundColor}"/>

            <!-- Стили с учетом темы -->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EnterButton" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Padding" Value="20,5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="{StaticResource PrimaryRedBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource MediumGrayBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LanguageButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource PrimaryRedBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <Style TargetType="{x:Type Label}">
                <Setter Property="Margin" Value="5,5,5,0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            </Style>

            <Style TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
            </Style>

            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            </Style>

            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}"
                                     FontWeight="Bold"
                                     Foreground="{StaticResource PrimaryRedBrush}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для круглых кнопок с иконками -->
            <Style x:Key="CircleButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Margin" Value="0,5,0,5"/>
                <Setter Property="Background" Value="#FFDDDDDD"/>
                <Setter Property="Tag" Value="Normal"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse x:Name="ButtonBorder" StrokeThickness="0" Stroke="{StaticResource DarkRedBrush}" Margin="-2"/>
                                <Ellipse x:Name="ButtonEllipse" Fill="{StaticResource DarkRedBrush}"/>
                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                                Storyboard.TargetName="ButtonEllipse" 
                                                Storyboard.TargetProperty="Fill.Color" 
                                                To="White" Duration="0:0:0.2" />
                                            <ColorAnimation 
                                                Storyboard.TargetName="ContentSite" 
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" 
                                                To="#CC0000" Duration="0:0:0.2" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="ButtonBorder"
                                                Storyboard.TargetProperty="StrokeThickness"
                                                To="2" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                                Storyboard.TargetName="ButtonEllipse" 
                                                Storyboard.TargetProperty="Fill.Color" 
                                                To="#CC0000" Duration="0:0:0.2" />
                                            <ColorAnimation 
                                                Storyboard.TargetName="ContentSite" 
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" 
                                                To="White" Duration="0:0:0.2" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="ButtonBorder"
                                                Storyboard.TargetProperty="StrokeThickness"
                                                To="0" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsPressed" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="ButtonEllipse" Property="Fill" Value="#FF8C0000"/>
                                        <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#FFFFFFFF"/>
                                        <Setter TargetName="ButtonBorder" Property="StrokeThickness" Value="3"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                
                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Highlighted">
                                    <Setter TargetName="ButtonEllipse" Property="Fill" Value="#FFFF6666"/>
                                    <Setter TargetName="ButtonBorder" Property="StrokeThickness" Value="2"/>
                                    <Setter TargetName="ButtonBorder" Property="Stroke" Value="#FFFF3333"/>
                                </DataTrigger>
                               
                                <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Disabled">
                                    <Setter TargetName="ButtonEllipse" Property="Fill" Value="#FFAAAAAA"/>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#FFDDDDDD"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#FFCC0000"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.7"/>
                    </Trigger>
                    
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="IsEnabled" Value="False"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Cursor" Value="No"/>
                            <Setter Property="ToolTip" Value="Эта функция недоступна"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для обычных кнопок -->
            <Style x:Key="DefaultButtonStyle" TargetType="Button">
                <Setter Property="MinWidth" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Padding" Value="15,5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="{StaticResource PrimaryRedBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#FFCC0000"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <!-- Стиль для PasswordBox-->
            <Style x:Key="CustomPasswordBoxStyle" TargetType="PasswordBox">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для TextBox -->
            <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Стиль для TextBlock -->
            <Style x:Key="CustomTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Margin" Value="0,5,0,2"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
            
            <!-- Стиль для заголовков TextBlock -->
            <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Margin" Value="0,10,0,5"/>
            </Style>
            
            <!-- Стиль для ComboBox -->
            <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MediumGrayBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                          Grid.Column="2" 
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                <ContentPresenter Name="ContentSite" 
                                              IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="10,3,30,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}" 
                                     HorizontalAlignment="Left" 
                                     VerticalAlignment="Center" 
                                     Margin="3,3,23,3"
                                     Focusable="True" 
                                     Background="{DynamicResource BackgroundBrush}"
                                     Foreground="{DynamicResource TextBrush}"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource BackgroundBrush}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource MediumGrayBrush}"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Шаблон для ToggleButton в ComboBox -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" 
                          Grid.ColumnSpan="2"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{DynamicResource BackgroundBrush}" 
                          CornerRadius="3" />
                    <Border Grid.Column="0"
                          CornerRadius="3,0,0,3" 
                          Margin="1" 
                          Background="{DynamicResource BackgroundBrush}" />
                    <Path x:Name="Arrow"
                        Grid.Column="1"     
                        Fill="{DynamicResource TextBrush}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 4 4 L 8 0 Z"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Шаблон для TextBox в ComboBox -->
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{DynamicResource BackgroundBrush}" />
            </ControlTemplate>
            
            <!-- Стиль для ScrollViewer -->
            <Style x:Key="CustomScrollViewerStyle" TargetType="ScrollViewer">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            </Style>
            
            <!-- Стиль для WrapPanel -->
            <Style x:Key="CustomWrapPanelStyle" TargetType="WrapPanel">
                <Setter Property="Margin" Value="10"/>
            </Style>
            
            <!-- Стиль для Border -->
            <Style x:Key="CustomBorderStyle" TargetType="Border">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightGrayBrush}"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>
            
            <!-- Стиль для карточек подписок -->
            <Style x:Key="SubscriptionCardStyle" TargetType="StackPanel">
                <Setter Property="Width" Value="360"/>
                <Setter Property="Height" Value="500"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для адаптивной карточки подписки -->
            <Style x:Key="ResponsiveSubscriptionCardStyle" TargetType="StackPanel">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="MinWidth" Value="300"/>
                <Setter Property="MaxWidth" Value="400"/>
                <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=WrapPanel}}"/>
                <Setter Property="Height" Value="500"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Стиль для адаптивного WrapPanel -->
            <Style x:Key="ResponsiveWrapPanelStyle" TargetType="WrapPanel">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="ItemWidth" Value="360"/>
                <Setter Property="ItemHeight" Value="500"/>
            </Style>

            <!-- Стиль для адаптивного ScrollViewer -->
            <Style x:Key="ResponsiveScrollViewerStyle" TargetType="ScrollViewer">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="Padding" Value="10"/>
            </Style>

            <!-- Стиль для адаптивного Grid -->
            <Style x:Key="ResponsiveGridStyle" TargetType="Grid">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            </Style>

            <!-- Стиль для окна -->
            <Style x:Key="WindowStyle" TargetType="Window">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="ResizeMode" Value="CanResize"/>
            </Style>

            <!-- Стиль для формы регистрации -->
            <Style x:Key="RegistrationFormStyle" TargetType="Grid">
                <Setter Property="Margin" Value="20"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <!-- Стиль для формы добавления подписки -->
            <Style x:Key="AddSubscriptionFormStyle" TargetType="Grid">
                <Setter Property="Margin" Value="20"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <!-- Стиль для деталей подписки -->
            <Style x:Key="SubscriptionDetailsStyle" TargetType="Grid">
                <Setter Property="Margin" Value="20"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <!-- Стиль для личного кабинета -->
            <Style x:Key="PersonalAccountStyle" TargetType="Grid">
                <Setter Property="Margin" Value="20"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <!-- Стиль для RadioButton -->
            <Style x:Key="CustomRadioButtonStyle" TargetType="RadioButton">
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse x:Name="RadioOuter"
                                       Width="18"
                                       Height="18"
                                       Stroke="{DynamicResource PrimaryRedBrush}"
                                       StrokeThickness="2"
                                       Fill="Transparent"/>
                                <Ellipse x:Name="RadioInner"
                                       Width="10"
                                       Height="10"
                                       Fill="{DynamicResource PrimaryRedBrush}"
                                       Opacity="0"/>
                                <ContentPresenter Grid.Column="1"
                                              Margin="5,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              TextElement.Foreground="{DynamicResource TextBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="RadioInner" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="RadioOuter" Property="Stroke" Value="{DynamicResource DarkRedBrush}"/>
                                    <Setter TargetName="RadioInner" Property="Fill" Value="{DynamicResource DarkRedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Стиль для TabControl -->
            <Style x:Key="CustomTabControlStyle" TargetType="TabControl">
                <Setter Property="Margin" Value="0,10,0,0"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Заголовки вкладок -->
                                <Border Grid.Row="0" 
                                       BorderThickness="0,0,0,1" 
                                       BorderBrush="{StaticResource LightGrayBrush}">
                                    <TabPanel x:Name="HeaderPanel" 
                                             Panel.ZIndex="1" 
                                             KeyboardNavigation.TabIndex="1" 
                                             IsItemsHost="True"/>
                                </Border>
                                
                                <!-- Контент вкладок -->
                                <Border Grid.Row="1" 
                                       Background="{TemplateBinding Background}" 
                                       BorderBrush="{TemplateBinding BorderBrush}" 
                                       BorderThickness="{TemplateBinding BorderThickness}" 
                                       KeyboardNavigation.TabNavigation="Local" 
                                       KeyboardNavigation.DirectionalNavigation="Contained" 
                                       KeyboardNavigation.TabIndex="2">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                     ContentSource="SelectedContent"
                                                     Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Стиль для TabItem -->
            <Style x:Key="CustomTabItemStyle" TargetType="TabItem">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border x:Name="Border" 
                                   Padding="{TemplateBinding Padding}" 
                                   BorderThickness="0,0,0,3" 
                                   BorderBrush="Transparent" 
                                   Background="Transparent">
                                <ContentPresenter x:Name="ContentSite" 
                                                VerticalAlignment="Center" 
                                                HorizontalAlignment="Center" 
                                                ContentSource="Header"
                                                TextElement.Foreground="{DynamicResource TextBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryRedBrush}"/>
                                    <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Bold"/>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{StaticResource PrimaryRedBrush}"/>
                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                    <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="{StaticResource PrimaryRedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Стиль для содержимого вкладки -->
            <Style x:Key="TabContentStyle" TargetType="StackPanel">
                <Setter Property="Margin" Value="0,20,0,0"/>
            </Style>

            <!-- Стиль для ComboBoxItem -->
            <Style TargetType="ComboBoxItem">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Padding" Value="5,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryRedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryRedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PrimaryRedBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
